/*
 * Copyright 2017 Crown Copyright
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
*/

/*
 * This file is generated by jOOQ.
*/
package stroom.models.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record10;
import org.jooq.Row10;
import org.jooq.impl.UpdatableRecordImpl;

import stroom.models.tables.StrmTp;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StrmTpRecord extends UpdatableRecordImpl<StrmTpRecord> implements Record10<Integer, Byte, String, String, String, String, Byte, String, Long, Long> {

    private static final long serialVersionUID = -1604247402;

    /**
     * Setter for <code>stroom.STRM_TP.ID</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>stroom.STRM_TP.ID</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>stroom.STRM_TP.VER</code>.
     */
    public void setVer(Byte value) {
        set(1, value);
    }

    /**
     * Getter for <code>stroom.STRM_TP.VER</code>.
     */
    public Byte getVer() {
        return (Byte) get(1);
    }

    /**
     * Setter for <code>stroom.STRM_TP.CRT_USER</code>.
     */
    public void setCrtUser(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>stroom.STRM_TP.CRT_USER</code>.
     */
    public String getCrtUser() {
        return (String) get(2);
    }

    /**
     * Setter for <code>stroom.STRM_TP.UPD_USER</code>.
     */
    public void setUpdUser(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>stroom.STRM_TP.UPD_USER</code>.
     */
    public String getUpdUser() {
        return (String) get(3);
    }

    /**
     * Setter for <code>stroom.STRM_TP.NAME</code>.
     */
    public void setName(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>stroom.STRM_TP.NAME</code>.
     */
    public String getName() {
        return (String) get(4);
    }

    /**
     * Setter for <code>stroom.STRM_TP.EXT</code>.
     */
    public void setExt(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>stroom.STRM_TP.EXT</code>.
     */
    public String getExt() {
        return (String) get(5);
    }

    /**
     * Setter for <code>stroom.STRM_TP.PURP</code>.
     */
    public void setPurp(Byte value) {
        set(6, value);
    }

    /**
     * Getter for <code>stroom.STRM_TP.PURP</code>.
     */
    public Byte getPurp() {
        return (Byte) get(6);
    }

    /**
     * Setter for <code>stroom.STRM_TP.PATH</code>.
     */
    public void setPath(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>stroom.STRM_TP.PATH</code>.
     */
    public String getPath() {
        return (String) get(7);
    }

    /**
     * Setter for <code>stroom.STRM_TP.CRT_MS</code>.
     */
    public void setCrtMs(Long value) {
        set(8, value);
    }

    /**
     * Getter for <code>stroom.STRM_TP.CRT_MS</code>.
     */
    public Long getCrtMs() {
        return (Long) get(8);
    }

    /**
     * Setter for <code>stroom.STRM_TP.UPD_MS</code>.
     */
    public void setUpdMs(Long value) {
        set(9, value);
    }

    /**
     * Getter for <code>stroom.STRM_TP.UPD_MS</code>.
     */
    public Long getUpdMs() {
        return (Long) get(9);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record10 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row10<Integer, Byte, String, String, String, String, Byte, String, Long, Long> fieldsRow() {
        return (Row10) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row10<Integer, Byte, String, String, String, String, Byte, String, Long, Long> valuesRow() {
        return (Row10) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return StrmTp.STRM_TP.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field2() {
        return StrmTp.STRM_TP.VER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return StrmTp.STRM_TP.CRT_USER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return StrmTp.STRM_TP.UPD_USER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return StrmTp.STRM_TP.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return StrmTp.STRM_TP.EXT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field7() {
        return StrmTp.STRM_TP.PURP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field8() {
        return StrmTp.STRM_TP.PATH;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field9() {
        return StrmTp.STRM_TP.CRT_MS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field10() {
        return StrmTp.STRM_TP.UPD_MS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value2() {
        return getVer();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getCrtUser();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getUpdUser();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getExt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value7() {
        return getPurp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value8() {
        return getPath();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value9() {
        return getCrtMs();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value10() {
        return getUpdMs();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StrmTpRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StrmTpRecord value2(Byte value) {
        setVer(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StrmTpRecord value3(String value) {
        setCrtUser(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StrmTpRecord value4(String value) {
        setUpdUser(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StrmTpRecord value5(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StrmTpRecord value6(String value) {
        setExt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StrmTpRecord value7(Byte value) {
        setPurp(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StrmTpRecord value8(String value) {
        setPath(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StrmTpRecord value9(Long value) {
        setCrtMs(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StrmTpRecord value10(Long value) {
        setUpdMs(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StrmTpRecord values(Integer value1, Byte value2, String value3, String value4, String value5, String value6, Byte value7, String value8, Long value9, Long value10) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached StrmTpRecord
     */
    public StrmTpRecord() {
        super(StrmTp.STRM_TP);
    }

    /**
     * Create a detached, initialised StrmTpRecord
     */
    public StrmTpRecord(Integer id, Byte ver, String crtUser, String updUser, String name, String ext, Byte purp, String path, Long crtMs, Long updMs) {
        super(StrmTp.STRM_TP);

        set(0, id);
        set(1, ver);
        set(2, crtUser);
        set(3, updUser);
        set(4, name);
        set(5, ext);
        set(6, purp);
        set(7, path);
        set(8, crtMs);
        set(9, updMs);
    }
}
