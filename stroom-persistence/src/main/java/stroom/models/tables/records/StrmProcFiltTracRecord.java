/*
 * Copyright 2017 Crown Copyright
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
*/

/*
 * This file is generated by jOOQ.
*/
package stroom.models.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record12;
import org.jooq.Row12;
import org.jooq.impl.UpdatableRecordImpl;

import stroom.models.tables.StrmProcFiltTrac;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StrmProcFiltTracRecord extends UpdatableRecordImpl<StrmProcFiltTracRecord> implements Record12<Integer, Byte, Long, Long, Long, Long, Long, Long, Integer, String, Long, Long> {

    private static final long serialVersionUID = 1531830071;

    /**
     * Setter for <code>stroom.STRM_PROC_FILT_TRAC.ID</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>stroom.STRM_PROC_FILT_TRAC.ID</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>stroom.STRM_PROC_FILT_TRAC.VER</code>.
     */
    public void setVer(Byte value) {
        set(1, value);
    }

    /**
     * Getter for <code>stroom.STRM_PROC_FILT_TRAC.VER</code>.
     */
    public Byte getVer() {
        return (Byte) get(1);
    }

    /**
     * Setter for <code>stroom.STRM_PROC_FILT_TRAC.MIN_STRM_ID</code>.
     */
    public void setMinStrmId(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>stroom.STRM_PROC_FILT_TRAC.MIN_STRM_ID</code>.
     */
    public Long getMinStrmId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>stroom.STRM_PROC_FILT_TRAC.MIN_EVT_ID</code>.
     */
    public void setMinEvtId(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>stroom.STRM_PROC_FILT_TRAC.MIN_EVT_ID</code>.
     */
    public Long getMinEvtId() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>stroom.STRM_PROC_FILT_TRAC.MIN_STRM_CRT_MS</code>.
     */
    public void setMinStrmCrtMs(Long value) {
        set(4, value);
    }

    /**
     * Getter for <code>stroom.STRM_PROC_FILT_TRAC.MIN_STRM_CRT_MS</code>.
     */
    public Long getMinStrmCrtMs() {
        return (Long) get(4);
    }

    /**
     * Setter for <code>stroom.STRM_PROC_FILT_TRAC.MAX_STRM_CRT_MS</code>.
     */
    public void setMaxStrmCrtMs(Long value) {
        set(5, value);
    }

    /**
     * Getter for <code>stroom.STRM_PROC_FILT_TRAC.MAX_STRM_CRT_MS</code>.
     */
    public Long getMaxStrmCrtMs() {
        return (Long) get(5);
    }

    /**
     * Setter for <code>stroom.STRM_PROC_FILT_TRAC.STRM_CRT_MS</code>.
     */
    public void setStrmCrtMs(Long value) {
        set(6, value);
    }

    /**
     * Getter for <code>stroom.STRM_PROC_FILT_TRAC.STRM_CRT_MS</code>.
     */
    public Long getStrmCrtMs() {
        return (Long) get(6);
    }

    /**
     * Setter for <code>stroom.STRM_PROC_FILT_TRAC.LAST_POLL_MS</code>.
     */
    public void setLastPollMs(Long value) {
        set(7, value);
    }

    /**
     * Getter for <code>stroom.STRM_PROC_FILT_TRAC.LAST_POLL_MS</code>.
     */
    public Long getLastPollMs() {
        return (Long) get(7);
    }

    /**
     * Setter for <code>stroom.STRM_PROC_FILT_TRAC.LAST_POLL_TASK_CT</code>.
     */
    public void setLastPollTaskCt(Integer value) {
        set(8, value);
    }

    /**
     * Getter for <code>stroom.STRM_PROC_FILT_TRAC.LAST_POLL_TASK_CT</code>.
     */
    public Integer getLastPollTaskCt() {
        return (Integer) get(8);
    }

    /**
     * Setter for <code>stroom.STRM_PROC_FILT_TRAC.STAT</code>.
     */
    public void setStat(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>stroom.STRM_PROC_FILT_TRAC.STAT</code>.
     */
    public String getStat() {
        return (String) get(9);
    }

    /**
     * Setter for <code>stroom.STRM_PROC_FILT_TRAC.STRM_CT</code>.
     */
    public void setStrmCt(Long value) {
        set(10, value);
    }

    /**
     * Getter for <code>stroom.STRM_PROC_FILT_TRAC.STRM_CT</code>.
     */
    public Long getStrmCt() {
        return (Long) get(10);
    }

    /**
     * Setter for <code>stroom.STRM_PROC_FILT_TRAC.EVT_CT</code>.
     */
    public void setEvtCt(Long value) {
        set(11, value);
    }

    /**
     * Getter for <code>stroom.STRM_PROC_FILT_TRAC.EVT_CT</code>.
     */
    public Long getEvtCt() {
        return (Long) get(11);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record12 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row12<Integer, Byte, Long, Long, Long, Long, Long, Long, Integer, String, Long, Long> fieldsRow() {
        return (Row12) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row12<Integer, Byte, Long, Long, Long, Long, Long, Long, Integer, String, Long, Long> valuesRow() {
        return (Row12) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return StrmProcFiltTrac.STRM_PROC_FILT_TRAC.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field2() {
        return StrmProcFiltTrac.STRM_PROC_FILT_TRAC.VER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field3() {
        return StrmProcFiltTrac.STRM_PROC_FILT_TRAC.MIN_STRM_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field4() {
        return StrmProcFiltTrac.STRM_PROC_FILT_TRAC.MIN_EVT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field5() {
        return StrmProcFiltTrac.STRM_PROC_FILT_TRAC.MIN_STRM_CRT_MS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field6() {
        return StrmProcFiltTrac.STRM_PROC_FILT_TRAC.MAX_STRM_CRT_MS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field7() {
        return StrmProcFiltTrac.STRM_PROC_FILT_TRAC.STRM_CRT_MS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field8() {
        return StrmProcFiltTrac.STRM_PROC_FILT_TRAC.LAST_POLL_MS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field9() {
        return StrmProcFiltTrac.STRM_PROC_FILT_TRAC.LAST_POLL_TASK_CT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field10() {
        return StrmProcFiltTrac.STRM_PROC_FILT_TRAC.STAT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field11() {
        return StrmProcFiltTrac.STRM_PROC_FILT_TRAC.STRM_CT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field12() {
        return StrmProcFiltTrac.STRM_PROC_FILT_TRAC.EVT_CT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value2() {
        return getVer();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value3() {
        return getMinStrmId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value4() {
        return getMinEvtId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value5() {
        return getMinStrmCrtMs();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value6() {
        return getMaxStrmCrtMs();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value7() {
        return getStrmCrtMs();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value8() {
        return getLastPollMs();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value9() {
        return getLastPollTaskCt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value10() {
        return getStat();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value11() {
        return getStrmCt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value12() {
        return getEvtCt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StrmProcFiltTracRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StrmProcFiltTracRecord value2(Byte value) {
        setVer(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StrmProcFiltTracRecord value3(Long value) {
        setMinStrmId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StrmProcFiltTracRecord value4(Long value) {
        setMinEvtId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StrmProcFiltTracRecord value5(Long value) {
        setMinStrmCrtMs(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StrmProcFiltTracRecord value6(Long value) {
        setMaxStrmCrtMs(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StrmProcFiltTracRecord value7(Long value) {
        setStrmCrtMs(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StrmProcFiltTracRecord value8(Long value) {
        setLastPollMs(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StrmProcFiltTracRecord value9(Integer value) {
        setLastPollTaskCt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StrmProcFiltTracRecord value10(String value) {
        setStat(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StrmProcFiltTracRecord value11(Long value) {
        setStrmCt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StrmProcFiltTracRecord value12(Long value) {
        setEvtCt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StrmProcFiltTracRecord values(Integer value1, Byte value2, Long value3, Long value4, Long value5, Long value6, Long value7, Long value8, Integer value9, String value10, Long value11, Long value12) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached StrmProcFiltTracRecord
     */
    public StrmProcFiltTracRecord() {
        super(StrmProcFiltTrac.STRM_PROC_FILT_TRAC);
    }

    /**
     * Create a detached, initialised StrmProcFiltTracRecord
     */
    public StrmProcFiltTracRecord(Integer id, Byte ver, Long minStrmId, Long minEvtId, Long minStrmCrtMs, Long maxStrmCrtMs, Long strmCrtMs, Long lastPollMs, Integer lastPollTaskCt, String stat, Long strmCt, Long evtCt) {
        super(StrmProcFiltTrac.STRM_PROC_FILT_TRAC);

        set(0, id);
        set(1, ver);
        set(2, minStrmId);
        set(3, minEvtId);
        set(4, minStrmCrtMs);
        set(5, maxStrmCrtMs);
        set(6, strmCrtMs);
        set(7, lastPollMs);
        set(8, lastPollTaskCt);
        set(9, stat);
        set(10, strmCt);
        set(11, evtCt);
    }
}
