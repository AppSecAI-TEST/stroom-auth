/*
 * Copyright 2017 Crown Copyright
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
*/

/*
 * This file is generated by jOOQ.
*/
package stroom.models.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record4;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;

import stroom.models.tables.SqlStatVal;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SqlStatValRecord extends UpdatableRecordImpl<SqlStatValRecord> implements Record6<Long, Byte, Byte, Long, Long, Long> {

    private static final long serialVersionUID = 623472711;

    /**
     * Setter for <code>stroom.SQL_STAT_VAL.TIME_MS</code>.
     */
    public void setTimeMs(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>stroom.SQL_STAT_VAL.TIME_MS</code>.
     */
    public Long getTimeMs() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>stroom.SQL_STAT_VAL.PRES</code>.
     */
    public void setPres(Byte value) {
        set(1, value);
    }

    /**
     * Getter for <code>stroom.SQL_STAT_VAL.PRES</code>.
     */
    public Byte getPres() {
        return (Byte) get(1);
    }

    /**
     * Setter for <code>stroom.SQL_STAT_VAL.VAL_TP</code>.
     */
    public void setValTp(Byte value) {
        set(2, value);
    }

    /**
     * Getter for <code>stroom.SQL_STAT_VAL.VAL_TP</code>.
     */
    public Byte getValTp() {
        return (Byte) get(2);
    }

    /**
     * Setter for <code>stroom.SQL_STAT_VAL.VAL</code>.
     */
    public void setVal(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>stroom.SQL_STAT_VAL.VAL</code>.
     */
    public Long getVal() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>stroom.SQL_STAT_VAL.CT</code>.
     */
    public void setCt(Long value) {
        set(4, value);
    }

    /**
     * Getter for <code>stroom.SQL_STAT_VAL.CT</code>.
     */
    public Long getCt() {
        return (Long) get(4);
    }

    /**
     * Setter for <code>stroom.SQL_STAT_VAL.FK_SQL_STAT_KEY_ID</code>.
     */
    public void setFkSqlStatKeyId(Long value) {
        set(5, value);
    }

    /**
     * Getter for <code>stroom.SQL_STAT_VAL.FK_SQL_STAT_KEY_ID</code>.
     */
    public Long getFkSqlStatKeyId() {
        return (Long) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record4<Long, Long, Byte, Byte> key() {
        return (Record4) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<Long, Byte, Byte, Long, Long, Long> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<Long, Byte, Byte, Long, Long, Long> valuesRow() {
        return (Row6) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return SqlStatVal.SQL_STAT_VAL.TIME_MS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field2() {
        return SqlStatVal.SQL_STAT_VAL.PRES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field3() {
        return SqlStatVal.SQL_STAT_VAL.VAL_TP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field4() {
        return SqlStatVal.SQL_STAT_VAL.VAL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field5() {
        return SqlStatVal.SQL_STAT_VAL.CT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field6() {
        return SqlStatVal.SQL_STAT_VAL.FK_SQL_STAT_KEY_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getTimeMs();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value2() {
        return getPres();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value3() {
        return getValTp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value4() {
        return getVal();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value5() {
        return getCt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value6() {
        return getFkSqlStatKeyId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SqlStatValRecord value1(Long value) {
        setTimeMs(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SqlStatValRecord value2(Byte value) {
        setPres(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SqlStatValRecord value3(Byte value) {
        setValTp(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SqlStatValRecord value4(Long value) {
        setVal(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SqlStatValRecord value5(Long value) {
        setCt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SqlStatValRecord value6(Long value) {
        setFkSqlStatKeyId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SqlStatValRecord values(Long value1, Byte value2, Byte value3, Long value4, Long value5, Long value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SqlStatValRecord
     */
    public SqlStatValRecord() {
        super(SqlStatVal.SQL_STAT_VAL);
    }

    /**
     * Create a detached, initialised SqlStatValRecord
     */
    public SqlStatValRecord(Long timeMs, Byte pres, Byte valTp, Long val, Long ct, Long fkSqlStatKeyId) {
        super(SqlStatVal.SQL_STAT_VAL);

        set(0, timeMs);
        set(1, pres);
        set(2, valTp);
        set(3, val);
        set(4, ct);
        set(5, fkSqlStatKeyId);
    }
}
