/*
 * Copyright 2017 Crown Copyright
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
*/

/*
 * This file is generated by jOOQ.
*/
package stroom.models.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;

import stroom.models.tables.AppPerm;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AppPermRecord extends UpdatableRecordImpl<AppPermRecord> implements Record4<Long, Byte, String, Integer> {

    private static final long serialVersionUID = -60112817;

    /**
     * Setter for <code>stroom.APP_PERM.ID</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>stroom.APP_PERM.ID</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>stroom.APP_PERM.VER</code>.
     */
    public void setVer(Byte value) {
        set(1, value);
    }

    /**
     * Getter for <code>stroom.APP_PERM.VER</code>.
     */
    public Byte getVer() {
        return (Byte) get(1);
    }

    /**
     * Setter for <code>stroom.APP_PERM.USR_UUID</code>.
     */
    public void setUsrUuid(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>stroom.APP_PERM.USR_UUID</code>.
     */
    public String getUsrUuid() {
        return (String) get(2);
    }

    /**
     * Setter for <code>stroom.APP_PERM.FK_PERM_ID</code>.
     */
    public void setFkPermId(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>stroom.APP_PERM.FK_PERM_ID</code>.
     */
    public Integer getFkPermId() {
        return (Integer) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Long, Byte, String, Integer> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Long, Byte, String, Integer> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return AppPerm.APP_PERM.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field2() {
        return AppPerm.APP_PERM.VER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return AppPerm.APP_PERM.USR_UUID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return AppPerm.APP_PERM.FK_PERM_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value2() {
        return getVer();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getUsrUuid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getFkPermId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AppPermRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AppPermRecord value2(Byte value) {
        setVer(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AppPermRecord value3(String value) {
        setUsrUuid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AppPermRecord value4(Integer value) {
        setFkPermId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AppPermRecord values(Long value1, Byte value2, String value3, Integer value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AppPermRecord
     */
    public AppPermRecord() {
        super(AppPerm.APP_PERM);
    }

    /**
     * Create a detached, initialised AppPermRecord
     */
    public AppPermRecord(Long id, Byte ver, String usrUuid, Integer fkPermId) {
        super(AppPerm.APP_PERM);

        set(0, id);
        set(1, ver);
        set(2, usrUuid);
        set(3, fkPermId);
    }
}
