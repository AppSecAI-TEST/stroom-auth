/*
 * Copyright 2017 Crown Copyright
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
*/

/*
 * This file is generated by jOOQ.
*/
package stroom.models.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;

import stroom.models.tables.VolState;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VolStateRecord extends UpdatableRecordImpl<VolStateRecord> implements Record6<Integer, Byte, Long, Long, Long, Long> {

    private static final long serialVersionUID = 410969340;

    /**
     * Setter for <code>stroom.VOL_STATE.ID</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>stroom.VOL_STATE.ID</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>stroom.VOL_STATE.VER</code>.
     */
    public void setVer(Byte value) {
        set(1, value);
    }

    /**
     * Getter for <code>stroom.VOL_STATE.VER</code>.
     */
    public Byte getVer() {
        return (Byte) get(1);
    }

    /**
     * Setter for <code>stroom.VOL_STATE.BYTES_USED</code>.
     */
    public void setBytesUsed(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>stroom.VOL_STATE.BYTES_USED</code>.
     */
    public Long getBytesUsed() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>stroom.VOL_STATE.BYTES_FREE</code>.
     */
    public void setBytesFree(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>stroom.VOL_STATE.BYTES_FREE</code>.
     */
    public Long getBytesFree() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>stroom.VOL_STATE.BYTES_TOTL</code>.
     */
    public void setBytesTotl(Long value) {
        set(4, value);
    }

    /**
     * Getter for <code>stroom.VOL_STATE.BYTES_TOTL</code>.
     */
    public Long getBytesTotl() {
        return (Long) get(4);
    }

    /**
     * Setter for <code>stroom.VOL_STATE.STAT_MS</code>.
     */
    public void setStatMs(Long value) {
        set(5, value);
    }

    /**
     * Getter for <code>stroom.VOL_STATE.STAT_MS</code>.
     */
    public Long getStatMs() {
        return (Long) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<Integer, Byte, Long, Long, Long, Long> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<Integer, Byte, Long, Long, Long, Long> valuesRow() {
        return (Row6) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return VolState.VOL_STATE.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field2() {
        return VolState.VOL_STATE.VER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field3() {
        return VolState.VOL_STATE.BYTES_USED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field4() {
        return VolState.VOL_STATE.BYTES_FREE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field5() {
        return VolState.VOL_STATE.BYTES_TOTL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field6() {
        return VolState.VOL_STATE.STAT_MS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value2() {
        return getVer();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value3() {
        return getBytesUsed();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value4() {
        return getBytesFree();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value5() {
        return getBytesTotl();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value6() {
        return getStatMs();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VolStateRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VolStateRecord value2(Byte value) {
        setVer(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VolStateRecord value3(Long value) {
        setBytesUsed(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VolStateRecord value4(Long value) {
        setBytesFree(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VolStateRecord value5(Long value) {
        setBytesTotl(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VolStateRecord value6(Long value) {
        setStatMs(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VolStateRecord values(Integer value1, Byte value2, Long value3, Long value4, Long value5, Long value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached VolStateRecord
     */
    public VolStateRecord() {
        super(VolState.VOL_STATE);
    }

    /**
     * Create a detached, initialised VolStateRecord
     */
    public VolStateRecord(Integer id, Byte ver, Long bytesUsed, Long bytesFree, Long bytesTotl, Long statMs) {
        super(VolState.VOL_STATE);

        set(0, id);
        set(1, ver);
        set(2, bytesUsed);
        set(3, bytesFree);
        set(4, bytesTotl);
        set(5, statMs);
    }
}
