/*
 * Copyright 2017 Crown Copyright
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
*/

/*
 * This file is generated by jOOQ.
*/
package stroom.models.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import stroom.models.Keys;
import stroom.models.Stroom;
import stroom.models.tables.records.StrmProcFiltTracRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StrmProcFiltTrac extends TableImpl<StrmProcFiltTracRecord> {

    private static final long serialVersionUID = 1755987332;

    /**
     * The reference instance of <code>stroom.STRM_PROC_FILT_TRAC</code>
     */
    public static final StrmProcFiltTrac STRM_PROC_FILT_TRAC = new StrmProcFiltTrac();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<StrmProcFiltTracRecord> getRecordType() {
        return StrmProcFiltTracRecord.class;
    }

    /**
     * The column <code>stroom.STRM_PROC_FILT_TRAC.ID</code>.
     */
    public final TableField<StrmProcFiltTracRecord, Integer> ID = createField("ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>stroom.STRM_PROC_FILT_TRAC.VER</code>.
     */
    public final TableField<StrmProcFiltTracRecord, Byte> VER = createField("VER", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

    /**
     * The column <code>stroom.STRM_PROC_FILT_TRAC.MIN_STRM_ID</code>.
     */
    public final TableField<StrmProcFiltTracRecord, Long> MIN_STRM_ID = createField("MIN_STRM_ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>stroom.STRM_PROC_FILT_TRAC.MIN_EVT_ID</code>.
     */
    public final TableField<StrmProcFiltTracRecord, Long> MIN_EVT_ID = createField("MIN_EVT_ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>stroom.STRM_PROC_FILT_TRAC.MIN_STRM_CRT_MS</code>.
     */
    public final TableField<StrmProcFiltTracRecord, Long> MIN_STRM_CRT_MS = createField("MIN_STRM_CRT_MS", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>stroom.STRM_PROC_FILT_TRAC.MAX_STRM_CRT_MS</code>.
     */
    public final TableField<StrmProcFiltTracRecord, Long> MAX_STRM_CRT_MS = createField("MAX_STRM_CRT_MS", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>stroom.STRM_PROC_FILT_TRAC.STRM_CRT_MS</code>.
     */
    public final TableField<StrmProcFiltTracRecord, Long> STRM_CRT_MS = createField("STRM_CRT_MS", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>stroom.STRM_PROC_FILT_TRAC.LAST_POLL_MS</code>.
     */
    public final TableField<StrmProcFiltTracRecord, Long> LAST_POLL_MS = createField("LAST_POLL_MS", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>stroom.STRM_PROC_FILT_TRAC.LAST_POLL_TASK_CT</code>.
     */
    public final TableField<StrmProcFiltTracRecord, Integer> LAST_POLL_TASK_CT = createField("LAST_POLL_TASK_CT", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>stroom.STRM_PROC_FILT_TRAC.STAT</code>.
     */
    public final TableField<StrmProcFiltTracRecord, String> STAT = createField("STAT", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>stroom.STRM_PROC_FILT_TRAC.STRM_CT</code>.
     */
    public final TableField<StrmProcFiltTracRecord, Long> STRM_CT = createField("STRM_CT", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>stroom.STRM_PROC_FILT_TRAC.EVT_CT</code>.
     */
    public final TableField<StrmProcFiltTracRecord, Long> EVT_CT = createField("EVT_CT", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * Create a <code>stroom.STRM_PROC_FILT_TRAC</code> table reference
     */
    public StrmProcFiltTrac() {
        this("STRM_PROC_FILT_TRAC", null);
    }

    /**
     * Create an aliased <code>stroom.STRM_PROC_FILT_TRAC</code> table reference
     */
    public StrmProcFiltTrac(String alias) {
        this(alias, STRM_PROC_FILT_TRAC);
    }

    private StrmProcFiltTrac(String alias, Table<StrmProcFiltTracRecord> aliased) {
        this(alias, aliased, null);
    }

    private StrmProcFiltTrac(String alias, Table<StrmProcFiltTracRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Stroom.STROOM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<StrmProcFiltTracRecord, Integer> getIdentity() {
        return Keys.IDENTITY_STRM_PROC_FILT_TRAC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<StrmProcFiltTracRecord> getPrimaryKey() {
        return Keys.KEY_STRM_PROC_FILT_TRAC_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<StrmProcFiltTracRecord>> getKeys() {
        return Arrays.<UniqueKey<StrmProcFiltTracRecord>>asList(Keys.KEY_STRM_PROC_FILT_TRAC_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StrmProcFiltTrac as(String alias) {
        return new StrmProcFiltTrac(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public StrmProcFiltTrac rename(String name) {
        return new StrmProcFiltTrac(name, null);
    }
}
