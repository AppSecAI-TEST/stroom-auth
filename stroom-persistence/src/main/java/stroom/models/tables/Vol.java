/*
 * Copyright 2017 Crown Copyright
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
*/

/*
 * This file is generated by jOOQ.
*/
package stroom.models.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import stroom.models.Keys;
import stroom.models.Stroom;
import stroom.models.tables.records.VolRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Vol extends TableImpl<VolRecord> {

    private static final long serialVersionUID = -173681958;

    /**
     * The reference instance of <code>stroom.VOL</code>
     */
    public static final Vol VOL = new Vol();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<VolRecord> getRecordType() {
        return VolRecord.class;
    }

    /**
     * The column <code>stroom.VOL.ID</code>.
     */
    public final TableField<VolRecord, Integer> ID = createField("ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>stroom.VOL.VER</code>.
     */
    public final TableField<VolRecord, Byte> VER = createField("VER", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

    /**
     * The column <code>stroom.VOL.CRT_USER</code>.
     */
    public final TableField<VolRecord, String> CRT_USER = createField("CRT_USER", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>stroom.VOL.UPD_USER</code>.
     */
    public final TableField<VolRecord, String> UPD_USER = createField("UPD_USER", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>stroom.VOL.PATH</code>.
     */
    public final TableField<VolRecord, String> PATH = createField("PATH", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>stroom.VOL.IDX_STAT</code>.
     */
    public final TableField<VolRecord, Byte> IDX_STAT = createField("IDX_STAT", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

    /**
     * The column <code>stroom.VOL.STRM_STAT</code>.
     */
    public final TableField<VolRecord, Byte> STRM_STAT = createField("STRM_STAT", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

    /**
     * The column <code>stroom.VOL.VOL_TP</code>.
     */
    public final TableField<VolRecord, Byte> VOL_TP = createField("VOL_TP", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

    /**
     * The column <code>stroom.VOL.BYTES_LMT</code>.
     */
    public final TableField<VolRecord, Long> BYTES_LMT = createField("BYTES_LMT", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>stroom.VOL.FK_ND_ID</code>.
     */
    public final TableField<VolRecord, Integer> FK_ND_ID = createField("FK_ND_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>stroom.VOL.FK_VOL_STATE_ID</code>.
     */
    public final TableField<VolRecord, Integer> FK_VOL_STATE_ID = createField("FK_VOL_STATE_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>stroom.VOL.CRT_MS</code>.
     */
    public final TableField<VolRecord, Long> CRT_MS = createField("CRT_MS", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>stroom.VOL.UPD_MS</code>.
     */
    public final TableField<VolRecord, Long> UPD_MS = createField("UPD_MS", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * Create a <code>stroom.VOL</code> table reference
     */
    public Vol() {
        this("VOL", null);
    }

    /**
     * Create an aliased <code>stroom.VOL</code> table reference
     */
    public Vol(String alias) {
        this(alias, VOL);
    }

    private Vol(String alias, Table<VolRecord> aliased) {
        this(alias, aliased, null);
    }

    private Vol(String alias, Table<VolRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Stroom.STROOM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<VolRecord, Integer> getIdentity() {
        return Keys.IDENTITY_VOL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<VolRecord> getPrimaryKey() {
        return Keys.KEY_VOL_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<VolRecord>> getKeys() {
        return Arrays.<UniqueKey<VolRecord>>asList(Keys.KEY_VOL_PRIMARY, Keys.KEY_VOL_FK_ND_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<VolRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<VolRecord, ?>>asList(Keys.VOL_FK_ND_ID, Keys.VOL_STAT_FK_VOL_STATE_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Vol as(String alias) {
        return new Vol(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Vol rename(String name) {
        return new Vol(name, null);
    }
}
